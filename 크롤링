{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"크롤링","provenance":[],"collapsed_sections":[],"mount_file_id":"1PV4xtPa_Bg7wBHJHoN00_sms85i5bPM4","authorship_tag":"ABX9TyMjP7FdQ5BQbT4LTlvaWcgZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!apt-get update\n","!apt install chromium-chromedriver\n","!cp /usr/lib/chromium-browser/chromedriver /usr/bin\n","!pip install selenium\n","# set options to be headless, ..\n","from selenium import webdriver\n","options = webdriver.ChromeOptions()\n","options.add_argument('--headless')\n","options.add_argument('--no-sandbox')\n","options.add_argument('--disable-dev-shm-usage')\n","# open it, go to a website, and get results\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FjoFwvew_i2A","executionInfo":{"status":"ok","timestamp":1652784044582,"user_tz":-540,"elapsed":49999,"user":{"displayName":"김서희","userId":"10032561524154874345"}},"outputId":"17f76221-0aaa-4738-ac98-c3908a4e0c0a"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["\r0% [Working]\r            \rGet:1 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease [1,581 B]\n","Get:2 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease [3,626 B]\n","Ign:3 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Hit:4 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Hit:5 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:6 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Get:7 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease [15.9 kB]\n","Get:8 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [770 kB]\n","Get:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Hit:10 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Get:11 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ Packages [85.2 kB]\n","Get:12 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Get:13 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease [15.9 kB]\n","Get:15 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Get:16 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main Sources [1,957 kB]\n","Get:17 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [932 kB]\n","Get:18 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,762 kB]\n","Get:19 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,503 kB]\n","Get:20 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main amd64 Packages [1,004 kB]\n","Get:21 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,277 kB]\n","Get:22 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [3,197 kB]\n","Get:23 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [966 kB]\n","Get:24 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic/main amd64 Packages [45.3 kB]\n","Get:25 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [44.3 kB]\n","Fetched 15.9 MB in 4s (4,058 kB/s)\n","Reading package lists... Done\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following packages were automatically installed and are no longer required:\n","  libnvidia-common-460 nsight-compute-2020.2.0\n","Use 'apt autoremove' to remove them.\n","The following additional packages will be installed:\n","  chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg-extra\n","Suggested packages:\n","  webaccounts-chromium-extension unity-chromium-extension\n","The following NEW packages will be installed:\n","  chromium-browser chromium-browser-l10n chromium-chromedriver\n","  chromium-codecs-ffmpeg-extra\n","0 upgraded, 4 newly installed, 0 to remove and 72 not upgraded.\n","Need to get 89.8 MB of archives.\n","After this operation, 302 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-codecs-ffmpeg-extra amd64 101.0.4951.64-0ubuntu0.18.04.1 [1,142 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-browser amd64 101.0.4951.64-0ubuntu0.18.04.1 [78.5 MB]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-browser-l10n all 101.0.4951.64-0ubuntu0.18.04.1 [4,980 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 chromium-chromedriver amd64 101.0.4951.64-0ubuntu0.18.04.1 [5,153 kB]\n","Fetched 89.8 MB in 5s (19.9 MB/s)\n","Selecting previously unselected package chromium-codecs-ffmpeg-extra.\n","(Reading database ... 155203 files and directories currently installed.)\n","Preparing to unpack .../chromium-codecs-ffmpeg-extra_101.0.4951.64-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-codecs-ffmpeg-extra (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-browser.\n","Preparing to unpack .../chromium-browser_101.0.4951.64-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-browser (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-browser-l10n.\n","Preparing to unpack .../chromium-browser-l10n_101.0.4951.64-0ubuntu0.18.04.1_all.deb ...\n","Unpacking chromium-browser-l10n (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Selecting previously unselected package chromium-chromedriver.\n","Preparing to unpack .../chromium-chromedriver_101.0.4951.64-0ubuntu0.18.04.1_amd64.deb ...\n","Unpacking chromium-chromedriver (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Setting up chromium-codecs-ffmpeg-extra (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Setting up chromium-browser (101.0.4951.64-0ubuntu0.18.04.1) ...\n","update-alternatives: using /usr/bin/chromium-browser to provide /usr/bin/x-www-browser (x-www-browser) in auto mode\n","update-alternatives: using /usr/bin/chromium-browser to provide /usr/bin/gnome-www-browser (gnome-www-browser) in auto mode\n","Setting up chromium-chromedriver (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Setting up chromium-browser-l10n (101.0.4951.64-0ubuntu0.18.04.1) ...\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Processing triggers for hicolor-icon-theme (0.17-2) ...\n","Processing triggers for mime-support (3.60ubuntu1) ...\n","Processing triggers for libc-bin (2.27-3ubuntu1.3) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","cp: '/usr/lib/chromium-browser/chromedriver' and '/usr/bin/chromedriver' are the same file\n","Collecting selenium\n","  Downloading selenium-4.1.5-py3-none-any.whl (979 kB)\n","\u001b[K     |████████████████████████████████| 979 kB 5.1 MB/s \n","\u001b[?25hCollecting trio-websocket~=0.9\n","  Downloading trio_websocket-0.9.2-py3-none-any.whl (16 kB)\n","Collecting urllib3[secure,socks]~=1.26\n","  Downloading urllib3-1.26.9-py2.py3-none-any.whl (138 kB)\n","\u001b[K     |████████████████████████████████| 138 kB 41.5 MB/s \n","\u001b[?25hCollecting trio~=0.17\n","  Downloading trio-0.20.0-py3-none-any.whl (359 kB)\n","\u001b[K     |████████████████████████████████| 359 kB 39.6 MB/s \n","\u001b[?25hCollecting sniffio\n","  Downloading sniffio-1.2.0-py3-none-any.whl (10 kB)\n","Collecting outcome\n","  Downloading outcome-1.1.0-py2.py3-none-any.whl (9.7 kB)\n","Collecting async-generator>=1.9\n","  Downloading async_generator-1.10-py3-none-any.whl (18 kB)\n","Requirement already satisfied: idna in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (2.10)\n","Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (2.4.0)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (21.4.0)\n","Collecting wsproto>=0.14\n","  Downloading wsproto-1.1.0-py3-none-any.whl (24 kB)\n","Requirement already satisfied: PySocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.7/dist-packages (from urllib3[secure,socks]~=1.26->selenium) (1.7.1)\n","Collecting pyOpenSSL>=0.14\n","  Downloading pyOpenSSL-22.0.0-py2.py3-none-any.whl (55 kB)\n","\u001b[K     |████████████████████████████████| 55 kB 2.3 MB/s \n","\u001b[?25hCollecting cryptography>=1.3.4\n","  Downloading cryptography-37.0.2-cp36-abi3-manylinux_2_24_x86_64.whl (4.0 MB)\n","\u001b[K     |████████████████████████████████| 4.0 MB 44.5 MB/s \n","\u001b[?25hRequirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from urllib3[secure,socks]~=1.26->selenium) (2021.10.8)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography>=1.3.4->urllib3[secure,socks]~=1.26->selenium) (1.15.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography>=1.3.4->urllib3[secure,socks]~=1.26->selenium) (2.21)\n","Collecting h11<1,>=0.9.0\n","  Downloading h11-0.13.0-py3-none-any.whl (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 3.6 MB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from h11<1,>=0.9.0->wsproto>=0.14->trio-websocket~=0.9->selenium) (4.2.0)\n","Installing collected packages: sniffio, outcome, h11, cryptography, async-generator, wsproto, urllib3, trio, pyOpenSSL, trio-websocket, selenium\n","  Attempting uninstall: urllib3\n","    Found existing installation: urllib3 1.24.3\n","    Uninstalling urllib3-1.24.3:\n","      Successfully uninstalled urllib3-1.24.3\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","requests 2.23.0 requires urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1, but you have urllib3 1.26.9 which is incompatible.\n","datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n","Successfully installed async-generator-1.10 cryptography-37.0.2 h11-0.13.0 outcome-1.1.0 pyOpenSSL-22.0.0 selenium-4.1.5 sniffio-1.2.0 trio-0.20.0 trio-websocket-0.9.2 urllib3-1.26.9 wsproto-1.1.0\n"]}]},{"cell_type":"code","source":["import time\n","from urllib.request import (urlopen, urlparse, urlunparse, urlretrieve)\n","\n","def selenium_scroll_option():\n","  SCROLL_PAUSE_SEC = 3\n","  \n","  # 스크롤 높이 가져옴\n","  last_height = wd.execute_script(\"return document.body.scrollHeight\")\n","  \n","  while True:\n","    # 끝까지 스크롤 다운\n","    wd.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","\n","    # 1초 대기\n","    time.sleep(SCROLL_PAUSE_SEC)\n","\n","    # 스크롤 다운 후 스크롤 높이 다시 가져옴\n","    new_height = wd.execute_script(\"return document.body.scrollHeight\")\n","  \n","    if new_height == last_height:\n","        break\n","    last_height = new_height"],"metadata":{"id":"KiTQeQv0J4HF","executionInfo":{"status":"ok","timestamp":1652784044583,"user_tz":-540,"elapsed":8,"user":{"displayName":"김서희","userId":"10032561524154874345"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["\n","cabbage = '/content/drive/MyDrive/IPS/data/original/양배추/'\n","onion = '/content/drive/MyDrive/IPS/data/original/양파/'\n","carrot = '/content/drive/MyDrive/IPS/data/original/당근/'\n","greenonion = '/content/drive/MyDrive/IPS/data/original/대파/'\n","greensmallonion = '/content/drive/MyDrive/IPS/data/original/쪽파/'\n","potato = '/content/drive/MyDrive/IPS/data/original/감자/'\n","garlic = '/content/drive/MyDrive/IPS/data/original/마늘/'\n","paprica = '/content/drive/MyDrive/IPS/data/original/파프리카/'\n","ccannip = '/content/drive/MyDrive/IPS/data/original/깻잎/'\n","raddish = '/content/drive/MyDrive/IPS/data/original/무/'\n","pepper ='/content/drive/MyDrive/IPS/data/original/청양고추/'\n","redpepper ='/content/drive/MyDrive/IPS/data/original/홍고추/'\n","jukkini='/content/drive/MyDrive/IPS/data/original/주키니호박/'\n","pigpumpkin='/content/drive/MyDrive/IPS/data/original/돼지호박/'\n","tofu ='/content/drive/MyDrive/IPS/data/original/두부/'\n","kongnamu ='/content/drive/MyDrive/IPS/data/original/콩나물/'\n","gangarlic ='/content/drive/MyDrive/IPS/data/original/간마늘/'\n","gansanggang='/content/drive/MyDrive/IPS/data/original/간생강/'\n","neutari='/content/drive/MyDrive/IPS/data/original/느타리버섯/'\n","yangsongi='/content/drive/MyDrive/IPS/data/original/양송이버섯/'\n","dwanjang='/content/drive/MyDrive/IPS/data/original/재래식된장/'\n","gochujang='/content/drive/MyDrive/IPS/data/original/고추장/'\n","bienna='/content/drive/MyDrive/IPS/data/original/비엔나소시지/'\n","bacon='/content/drive/MyDrive/IPS/data/original/베이컨/'\n","mayonez='/content/drive/MyDrive/IPS/data/original/마요네즈/'\n","kechap='/content/drive/MyDrive/IPS/data/original/케찹/'\n","milk='/content/drive/MyDrive/IPS/data/original/우유/'\n","butter='/content/drive/MyDrive/IPS/data/original/버터/'\n","parmesancheese='/content/drive/MyDrive/IPS/data/original/파르메산치즈/'\n","pork='/content/drive/MyDrive/IPS/data/original/돼지고기(등심)/'\n","chadol='/content/drive/MyDrive/IPS/data/original/차돌박이/'\n","ganpig='/content/drive/MyDrive/IPS/data/original/간돼지고기/'\n","daepaesamgyeop='/content/drive/MyDrive/IPS/data/original/대패삼겹살/'"],"metadata":{"id":"xkB6xM6BKK6Z","executionInfo":{"status":"ok","timestamp":1652784044583,"user_tz":-540,"elapsed":6,"user":{"displayName":"김서희","userId":"10032561524154874345"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["from selenium.webdriver.common.keys import Keys\n","import urllib.request\n","import os\n","import pandas as pd\n","\n","a=input(\"검색할 키워드를 입력 : \")\n","image_name = input(\"저장할 이미지 이름 : \")\n","#b=int(input(\"몇 개 저장할래? : \"))\n","wd = webdriver.Chrome('chromedriver',options=options)\n","wd.get('http://www.google.com/imghp?hl=ko')\n","browser = wd.find_element_by_name(\"q\")\n","browser.send_keys(a)\n","browser.send_keys(Keys.RETURN)\n","\n","\n","\n","# 클래스를 찾고 해당 클래스의 src 리스트를 만들자\n","\n","selenium_scroll_option() # 스크롤하여 이미지를 많이 확보 \n","wd.find_elements_by_xpath('//*[@id=\"islmp\"]/div/div/div/div[1]/div[2]/div[2]/input')[0].click() # 이미지 더보기 클릭\n","\n","selenium_scroll_option()\n","\n","\n","\n","'''이미지 src요소를 리스트업해서 이미지 url 저장'''\n","\n","images = wd.find_elements_by_css_selector(\".rg_i.Q4LuWd\") #  클래스 네임에서 공백은 .을 찍어줌\n","images_url = []\n","for i in images: \n","   \n","   if i.get_attribute('src')!= None :\n","        images_url.append(i.get_attribute('src'))\n","   else :\n","       images_url.append(i.get_attribute('data-src'))\n","wd.close()\n","\n","\n"],"metadata":{"id":"1nPot6HiLo6v","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652784592745,"user_tz":-540,"elapsed":70270,"user":{"displayName":"김서희","userId":"10032561524154874345"}},"outputId":"33a296ec-6aaf-4fb5-ddab-c6cb2f852a17"},"execution_count":7,"outputs":[{"name":"stdout","output_type":"stream","text":["검색할 키워드를 입력 : 깐마늘\n","저장할 이미지 이름 : 마늘\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: find_element_by_name is deprecated. Please use find_element(by=By.NAME, value=name) instead\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:20: DeprecationWarning: find_elements_by_xpath is deprecated. Please use find_elements(by=By.XPATH, value=xpath) instead\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:28: DeprecationWarning: find_elements_by_css_selector is deprecated. Please use find_elements(by=By.CSS_SELECTOR, value=css_selector) instead\n"]}]},{"cell_type":"code","source":["\n","# 겹치는 이미지 url 제거\n","\n","print(\"전체 다운로드한 이미지 개수: {}\\n동일한 이미지를 제거한 이미지 개수: {}\".format(len(images_url), len(pd.DataFrame(images_url)[0].unique())))\n","images_url=pd.DataFrame(images_url)[0].unique()\n","\n","\n","        \n","\n","        \n","if image_name == '양배추' :   \n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, cabbage + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","   \n","elif image_name == '양파' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, onion + image_name + '_' + str(t) + '.jpg')\n","   wd.close()    \n","\n","elif image_name == '당근' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, carrot + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '대파' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, greenonion + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '쪽파' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, greensmallonion + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '감자' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, potato + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '마늘' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, garlic + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '파프리카' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, paprica + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '깻잎' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, ccannip + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '무' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, raddish + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '청양고추' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, pepper + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '홍고추' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, redpepper + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '주키니호박' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, jukkini + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '돼지호박' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, pigpumpkin + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '두부' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, tofu + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '콩나물' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, kongnamu + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","\n","elif image_name == '간마늘' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, gangarlic + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '간생강' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, gansanggang + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '느타리버섯' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, neutari + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '양송이버섯' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, yangsongi + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '재래식된장' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, dwanjang + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '고추장' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, gochujang + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '비엔나소시지' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, bienna + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '베이컨' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, bacon + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '마요네즈' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, mayonez + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '케찹' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, kechap + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '우유' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, milk + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '버터' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, butter + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","   \n","elif image_name == '파르메산치즈' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, parmesancheese + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '돼지고기(등심)' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, pork + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '차돌박이' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, chadol + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '대패삼겹살' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, daepaesamgyeop + image_name + '_' + str(t) + '.jpg')\n","   wd.close()\n","elif image_name == '간돼지고기' :\n","   for t, url in enumerate(images_url, 0):        \n","      urlretrieve(url, ganpig + image_name + '_' + str(t) + '.jpg')\n","   wd.close()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":762},"id":"PcDhk_3LMI9y","executionInfo":{"status":"error","timestamp":1652784624589,"user_tz":-540,"elapsed":12812,"user":{"displayName":"김서희","userId":"10032561524154874345"}},"outputId":"9a5ec52a-83e5-4297-eb29-518e4aeb908b"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["전체 다운로드한 이미지 개수: 757\n","동일한 이미지를 제거한 이미지 개수: 757\n"]},{"output_type":"error","ename":"InvalidSessionIdException","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mInvalidSessionIdException\u001b[0m                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-f2e81f58303a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     40\u001b[0m    \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimages_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     41\u001b[0m       \u001b[0murlretrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgarlic\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mimage_name\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.jpg'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 42\u001b[0;31m    \u001b[0mwd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m \u001b[0;32melif\u001b[0m \u001b[0mimage_name\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'파프리카'\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m    \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimages_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py\u001b[0m in \u001b[0;36mclose\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    941\u001b[0m                 \u001b[0mdriver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    942\u001b[0m         \"\"\"\n\u001b[0;32m--> 943\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCommand\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCLOSE\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    944\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    945\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mquit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, driver_command, params)\u001b[0m\n\u001b[1;32m    428\u001b[0m         \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcommand_executor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdriver_command\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    429\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 430\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merror_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck_response\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    431\u001b[0m             response['value'] = self._unwrap_value(\n\u001b[1;32m    432\u001b[0m                 response.get('value', None))\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/errorhandler.py\u001b[0m in \u001b[0;36mcheck_response\u001b[0;34m(self, response)\u001b[0m\n\u001b[1;32m    245\u001b[0m                 \u001b[0malert_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'alert'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'text'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    246\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malert_text\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]  # mypy is not smart enough here\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 247\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    248\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    249\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_value_or_default\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mMapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0m_KT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_VT\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0m_KT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0m_VT\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0m_VT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mInvalidSessionIdException\u001b[0m: Message: invalid session id\nStacktrace:\n#0 0x55dee1c03553 <unknown>\n#1 0x55dee18ee067 <unknown>\n#2 0x55dee1917da5 <unknown>\n#3 0x55dee1941e3c <unknown>\n#4 0x55dee193f7d9 <unknown>\n#5 0x55dee193f046 <unknown>\n#6 0x55dee18c7da7 <unknown>\n#7 0x55dee18c8e69 <unknown>\n#8 0x55dee1c739d0 <unknown>\n#9 0x55dee1c38a38 <unknown>\n#10 0x55dee1c3875c <unknown>\n#11 0x55dee1c38fc2 <unknown>\n#12 0x55dee1c7171b <unknown>\n#13 0x55dee1c39221 <unknown>\n#14 0x55dee1c1c5b3 <unknown>\n#15 0x55dee18c7992 <unknown>\n#16 0x7fae3de7ac87 <unknown>\n"]}]}]}